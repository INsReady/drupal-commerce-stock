<?php

use Drupal\commerce_stock\Entity\Stock;

/**
 * @file
 * Defines common functionality for all Commerce Stock modules.
 */

/**
 * When a new stock instance is added to an existing product variation
 *
 * @param \Drupal\Core\Entity\EntityInterface $entity
 *
 */

function commerce_stock_entity_update(Drupal\Core\Entity\EntityInterface $entity) {

  if ($entity->getEntityTypeId() == 'commerce_product_variation') {
    $stockList = $entity->stock;
    foreach ($stockList as $stockItem) {
      $stock_id = $stockItem->get('entity')->getTargetIdentifier();
      $stock = Stock::load($stock_id);

      // Check if a stock has movement, if none, then it's new.
      $query = \Drupal::entityQuery('commerce_stock_movement');

      $result = $query->condition('stock_id', $stock_id)->execute();

      if (empty($result)) {
        $movement = Drupal::entityTypeManager()
          ->getStorage('commerce_stock_movement')
          ->create([
            'variation_id' => $entity->id(),
            'stock_id' => $stock_id,
            'qty' => $stock->getQuantity(),
            'location_id' => $stock->getStockLocation()->id(),
            'uid' => \Drupal::currentUser()->id(),
            'description' => t('New Stock Created.'),
          ]);

        $movement->save();
      }
    }
  }
}
